<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- BoneCP configuration -->
	<!-- <bean id="mainDataSource" class="com.jolbox.bonecp.BoneCPDataSource" -->
	<!-- destroy-method="close"> -->
	<!-- <property name="driverClass" value="${jdbc.driverClassName}" /> -->
	<!-- <property name="jdbcUrl" value="${jdbc.url}" /> -->
	<!-- <property name="username" value="${jdbc.username}" /> -->
	<!-- <property name="password" value="${jdbc.password}" /> -->
	<!-- <property name="idleConnectionTestPeriod" value="60" /> -->
	<!-- <property name="idleMaxAge" value="240" /> -->
	<!-- <property name="maxConnectionsPerPartition" value="30" /> -->
	<!-- <property name="minConnectionsPerPartition" value="10" /> -->
	<!-- <property name="partitionCount" value="3" /> -->
	<!-- <property name="acquireIncrement" value="5" /> -->
	<!-- <property name="statementsCacheSize" value="100" /> -->
	<!-- <property name="releaseHelperThreads" value="3" /> -->
	<!-- </bean> -->

	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<!-- <bean id="c3p0DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" -->
	<!-- destroy-method="close"> -->
	<!-- <property name="driverClass" value="${jdbc.driverClassName}"/> -->
	<!-- <property name="jdbcUrl" value="${jdbc.url}"/> -->
	<!-- <property name="user" value="${jdbc.username}"/> -->
	<!-- <property name="password" value="${jdbc.password}"/> -->
	<!-- <property name="maxPoolSize" value="40"/> -->
	<!-- <property name="minPoolSize" value="1"/> -->
	<!-- <property name="initialPoolSize" value="1"/> -->
	<!-- <property name="maxIdleTime" value="60"/> -->
	<!-- </bean> -->

	<!-- dbcp pool -->
	<bean id="dbcpDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="2" />
		<property name="maxActive" value="20" />
		<property name="maxIdle" value="10" />
		<property name="maxWait" value="30000" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxOpenPreparedStatements" value="30" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="300" />
		<property name="logAbandoned" value="false" />
		<property name="minEvictableIdleTimeMillis" value="30000" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<property name="validationQuery" value="select 1 from dual" />
		<property name="validationQueryTimeout" value="1" />
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
		<property name="numTestsPerEvictionRun" value="20" />
	</bean>

	<!-- 配置sqlSessionFactory工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dbcpDataSource" />
		<property name="configLocation" value="classpath:conf/sqlMapConfig.xml" />
		<property name="mapperLocations" value="classpath*:com/*.xml" />
		<property name="typeAliasesPackage" value="com.jiazu.web.platform.entity" />
		<property name="typeHandlersPackage" value="com.jiazu.core.mybatis.handlers" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jiazu.web.platform.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dbcpDataSource" />
	</bean>

	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<!-- PROPAGATION_REQUIRED是事务传播机制，即如果没有事务就创建事务，如果事务存在则加入事务 -->
		<!-- ISOLATION_DEFAULT是事务的隔离级别是数据库默认的隔离级别 -->
		<!-- -Exception中“-”表示哪些异常发生事务将回滚，如果是“+”则表示即使异常该事务仍旧被提交 -->
		<property name="transactionAttributes" ref="transactionProps" />
	</bean>

	<bean id="txAutoCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames" ref="platformBeanNameList" />
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>

<!-- 	<bean id="matchAllWithPropReq" class="org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource"> -->
<!-- 		<property name="transactionAttribute"> -->
<!-- 			<value>PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly</value> -->
<!-- 		</property> -->
<!-- 	</bean> -->

<!-- 	<bean id="matchAllTxInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor"> -->
<!-- 		<property name="transactionManager"> -->
<!-- 			<ref bean="transactionManager" /> -->
<!-- 		</property> -->
<!-- 		<property name="transactionAttributeSource"> -->
<!-- 			<ref bean="matchAllWithPropReq" /> -->
<!-- 		</property> -->
<!-- 	</bean> -->

	<!-- <tx:advice id="platformTxAdvice" transaction-manager="transactionManager"> -->
	<!-- <tx:attributes> -->
	<!-- <tx:method name="find*" propagation="SUPPORTS" /> -->
	<!-- <tx:method name="get*" propagation="SUPPORTS" /> -->
	<!-- <tx:method name="select*" propagation="SUPPORTS" /> -->
	<!-- <tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.RuntimeException" /> -->
	<!-- <tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" /> -->
	<!-- <tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" -->
	<!-- no-rollback-for="java.lang.RuntimeException" /> -->
	<!-- </tx:attributes> -->
	<!-- </tx:advice> -->
	<!-- <aop:config> -->
	<!-- <aop:pointcut id="pc" expression="execution(public * com.jiazu.web.**.*(..))" /> -->
	<!-- <aop:advisor pointcut-ref="pc" advice-ref="platformTxAdvice" /> -->
	<!-- </aop:config> -->

</beans>